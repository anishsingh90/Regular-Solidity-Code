{
	"id": "93103b303ca2d899964bb8f9588a9f15",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Day-34/code5.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ncontract SafeMathExample {\r\n    // Use SafeMath for uint256 operations\r\n    using SafeMath for uint256;\r\n\r\n    // A simple state variable to store a number\r\n    uint256 public total;\r\n\r\n    // Constructor to initialize the total value\r\n    constructor() {\r\n        total = 0;\r\n    }\r\n\r\n    // Function to add a value to the total\r\n    function add(uint256 value) external {\r\n        // Prevent overflow using SafeMath\r\n        total = total.add(value);\r\n    }\r\n\r\n    // Function to subtract a value from the total\r\n    function subtract(uint256 value) external {\r\n        // Prevent underflow using SafeMath\r\n        total = total.sub(value);\r\n    }\r\n\r\n    // Function to multiply the total by a value\r\n    function multiply(uint256 value) external {\r\n        total = total.mul(value);\r\n    }\r\n\r\n    // Function to divide the total by a value\r\n    function divide(uint256 value) external {\r\n        require(value > 0, \"Cannot divide by zero\");\r\n        total = total.div(value);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122047c4537c112e7dfd362fbbc3109dcd7efad1e9f705b895d9c42d83f61dd9cedb64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122047c4537c112e7dfd362fbbc3109dcd7efad1e9f705b895d9c42d83f61dd9cedb64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xC4 MSTORE8 PUSH29 0x112E7DFD362FBBC3109DCD7EFAD1E9F705B895D9C42D83F61DD9CEDB64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "482:6210:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122047c4537c112e7dfd362fbbc3109dcd7efad1e9f705b895d9c42d83f61dd9cedb64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xC4 MSTORE8 PUSH29 0x112E7DFD362FBBC3109DCD7EFAD1E9F705B895D9C42D83F61DD9CEDB64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "482:6210:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122047c4537c112e7dfd362fbbc3109dcd7efad1e9f705b895d9c42d83f61dd9cedb64736f6c634300081a0033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Day-34/code5.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Day-34/code5.sol": {
				"SafeMathExample": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "add",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "divide",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "multiply",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "subtract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "total",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Day-34/code5.sol\":121:1109  contract SafeMathExample {... */\n  mstore(0x40, 0x80)\n    /* \"Day-34/code5.sol\":361:403  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Day-34/code5.sol\":394:395  0 */\n  0x00\n    /* \"Day-34/code5.sol\":386:391  total */\n  dup1\n    /* \"Day-34/code5.sol\":386:395  total = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Day-34/code5.sol\":121:1109  contract SafeMathExample {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Day-34/code5.sol\":121:1109  contract SafeMathExample {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1003e2d2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1dc05f17\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2ddbd13a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3e823f79\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xc6888fa1\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Day-34/code5.sol\":456:580  function add(uint256 value) external {... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      stop\n        /* \"Day-34/code5.sol\":640:770  function subtract(uint256 value) external {... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_13:\n      tag_14\n      jump\t// in\n    tag_12:\n      stop\n        /* \"Day-34/code5.sol\":282:302  uint256 public total */\n    tag_5:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Day-34/code5.sol\":969:1106  function divide(uint256 value) external {... */\n    tag_6:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_20:\n      tag_21\n      jump\t// in\n    tag_19:\n      stop\n        /* \"Day-34/code5.sol\":828:913  function multiply(uint256 value) external {... */\n    tag_7:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_23:\n      tag_24\n      jump\t// in\n    tag_22:\n      stop\n        /* \"Day-34/code5.sol\":456:580  function add(uint256 value) external {... */\n    tag_11:\n        /* \"Day-34/code5.sol\":556:572  total.add(value) */\n      tag_26\n        /* \"Day-34/code5.sol\":566:571  value */\n      dup2\n        /* \"Day-34/code5.sol\":556:561  total */\n      sload(0x00)\n        /* \"Day-34/code5.sol\":556:565  total.add */\n      tag_27\n      swap1\n        /* \"Day-34/code5.sol\":556:572  total.add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_26:\n        /* \"Day-34/code5.sol\":548:553  total */\n      0x00\n        /* \"Day-34/code5.sol\":548:572  total = total.add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Day-34/code5.sol\":456:580  function add(uint256 value) external {... */\n      pop\n      jump\t// out\n        /* \"Day-34/code5.sol\":640:770  function subtract(uint256 value) external {... */\n    tag_14:\n        /* \"Day-34/code5.sol\":746:762  total.sub(value) */\n      tag_29\n        /* \"Day-34/code5.sol\":756:761  value */\n      dup2\n        /* \"Day-34/code5.sol\":746:751  total */\n      sload(0x00)\n        /* \"Day-34/code5.sol\":746:755  total.sub */\n      tag_30\n      swap1\n        /* \"Day-34/code5.sol\":746:762  total.sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_29:\n        /* \"Day-34/code5.sol\":738:743  total */\n      0x00\n        /* \"Day-34/code5.sol\":738:762  total = total.sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Day-34/code5.sol\":640:770  function subtract(uint256 value) external {... */\n      pop\n      jump\t// out\n        /* \"Day-34/code5.sol\":282:302  uint256 public total */\n    tag_16:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"Day-34/code5.sol\":969:1106  function divide(uint256 value) external {... */\n    tag_21:\n        /* \"Day-34/code5.sol\":1036:1037  0 */\n      0x00\n        /* \"Day-34/code5.sol\":1028:1033  value */\n      dup2\n        /* \"Day-34/code5.sol\":1028:1037  value > 0 */\n      gt\n        /* \"Day-34/code5.sol\":1020:1063  require(value > 0, \"Cannot divide by zero\") */\n      tag_32\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_33\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_32:\n        /* \"Day-34/code5.sol\":1082:1098  total.div(value) */\n      tag_35\n        /* \"Day-34/code5.sol\":1092:1097  value */\n      dup2\n        /* \"Day-34/code5.sol\":1082:1087  total */\n      sload(0x00)\n        /* \"Day-34/code5.sol\":1082:1091  total.div */\n      tag_36\n      swap1\n        /* \"Day-34/code5.sol\":1082:1098  total.div(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_35:\n        /* \"Day-34/code5.sol\":1074:1079  total */\n      0x00\n        /* \"Day-34/code5.sol\":1074:1098  total = total.div(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Day-34/code5.sol\":969:1106  function divide(uint256 value) external {... */\n      pop\n      jump\t// out\n        /* \"Day-34/code5.sol\":828:913  function multiply(uint256 value) external {... */\n    tag_24:\n        /* \"Day-34/code5.sol\":889:905  total.mul(value) */\n      tag_38\n        /* \"Day-34/code5.sol\":899:904  value */\n      dup2\n        /* \"Day-34/code5.sol\":889:894  total */\n      sload(0x00)\n        /* \"Day-34/code5.sol\":889:898  total.mul */\n      tag_39\n      swap1\n        /* \"Day-34/code5.sol\":889:905  total.mul(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_38:\n        /* \"Day-34/code5.sol\":881:886  total */\n      0x00\n        /* \"Day-34/code5.sol\":881:905  total = total.mul(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Day-34/code5.sol\":828:913  function multiply(uint256 value) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_53:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_55:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_56:\n        /* \"#utility.yul\":490:514   */\n      tag_70\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_55\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_71\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_71:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_57:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_73\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_56\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_10:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_75\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_76\n      tag_53\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":766:885   */\n    tag_75:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_77\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_57\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_58:\n        /* \"#utility.yul\":1112:1136   */\n      tag_79\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_55\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_18:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_81\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_58\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1546   */\n    tag_59:\n        /* \"#utility.yul\":1461:1472   */\n      0x00\n        /* \"#utility.yul\":1495:1501   */\n      dup3\n        /* \"#utility.yul\":1490:1493   */\n      dup3\n        /* \"#utility.yul\":1483:1502   */\n      mstore\n        /* \"#utility.yul\":1535:1539   */\n      0x20\n        /* \"#utility.yul\":1530:1533   */\n      dup3\n        /* \"#utility.yul\":1526:1540   */\n      add\n        /* \"#utility.yul\":1511:1540   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1546   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1552:1723   */\n    tag_60:\n        /* \"#utility.yul\":1692:1715   */\n      0x43616e6e6f7420646976696465206279207a65726f0000000000000000000000\n        /* \"#utility.yul\":1688:1689   */\n      0x00\n        /* \"#utility.yul\":1680:1686   */\n      dup3\n        /* \"#utility.yul\":1676:1690   */\n      add\n        /* \"#utility.yul\":1669:1716   */\n      mstore\n        /* \"#utility.yul\":1552:1723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1729:2095   */\n    tag_61:\n        /* \"#utility.yul\":1871:1874   */\n      0x00\n        /* \"#utility.yul\":1892:1959   */\n      tag_85\n        /* \"#utility.yul\":1956:1958   */\n      0x15\n        /* \"#utility.yul\":1951:1954   */\n      dup4\n        /* \"#utility.yul\":1892:1959   */\n      tag_59\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":1885:1959   */\n      swap2\n      pop\n        /* \"#utility.yul\":1968:2061   */\n      tag_86\n        /* \"#utility.yul\":2057:2060   */\n      dup3\n        /* \"#utility.yul\":1968:2061   */\n      tag_60\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":2086:2088   */\n      0x20\n        /* \"#utility.yul\":2081:2084   */\n      dup3\n        /* \"#utility.yul\":2077:2089   */\n      add\n        /* \"#utility.yul\":2070:2089   */\n      swap1\n      pop\n        /* \"#utility.yul\":1729:2095   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2101:2520   */\n    tag_34:\n        /* \"#utility.yul\":2267:2271   */\n      0x00\n        /* \"#utility.yul\":2305:2307   */\n      0x20\n        /* \"#utility.yul\":2294:2303   */\n      dup3\n        /* \"#utility.yul\":2290:2308   */\n      add\n        /* \"#utility.yul\":2282:2308   */\n      swap1\n      pop\n        /* \"#utility.yul\":2354:2363   */\n      dup2\n        /* \"#utility.yul\":2348:2352   */\n      dup2\n        /* \"#utility.yul\":2344:2364   */\n      sub\n        /* \"#utility.yul\":2340:2341   */\n      0x00\n        /* \"#utility.yul\":2329:2338   */\n      dup4\n        /* \"#utility.yul\":2325:2342   */\n      add\n        /* \"#utility.yul\":2318:2365   */\n      mstore\n        /* \"#utility.yul\":2382:2513   */\n      tag_88\n        /* \"#utility.yul\":2508:2512   */\n      dup2\n        /* \"#utility.yul\":2382:2513   */\n      tag_61\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":2374:2513   */\n      swap1\n      pop\n        /* \"#utility.yul\":2101:2520   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2526:2706   */\n    tag_62:\n        /* \"#utility.yul\":2574:2651   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2571:2572   */\n      0x00\n        /* \"#utility.yul\":2564:2652   */\n      mstore\n        /* \"#utility.yul\":2671:2675   */\n      0x11\n        /* \"#utility.yul\":2668:2669   */\n      0x04\n        /* \"#utility.yul\":2661:2676   */\n      mstore\n        /* \"#utility.yul\":2695:2699   */\n      0x24\n        /* \"#utility.yul\":2692:2693   */\n      0x00\n        /* \"#utility.yul\":2685:2700   */\n      revert\n        /* \"#utility.yul\":2712:2903   */\n    tag_42:\n        /* \"#utility.yul\":2752:2755   */\n      0x00\n        /* \"#utility.yul\":2771:2791   */\n      tag_91\n        /* \"#utility.yul\":2789:2790   */\n      dup3\n        /* \"#utility.yul\":2771:2791   */\n      tag_55\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":2766:2791   */\n      swap2\n      pop\n        /* \"#utility.yul\":2805:2825   */\n      tag_92\n        /* \"#utility.yul\":2823:2824   */\n      dup4\n        /* \"#utility.yul\":2805:2825   */\n      tag_55\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":2800:2825   */\n      swap3\n      pop\n        /* \"#utility.yul\":2848:2849   */\n      dup3\n        /* \"#utility.yul\":2845:2846   */\n      dup3\n        /* \"#utility.yul\":2841:2850   */\n      add\n        /* \"#utility.yul\":2834:2850   */\n      swap1\n      pop\n        /* \"#utility.yul\":2869:2872   */\n      dup1\n        /* \"#utility.yul\":2866:2867   */\n      dup3\n        /* \"#utility.yul\":2863:2873   */\n      gt\n        /* \"#utility.yul\":2860:2896   */\n      iszero\n      tag_93\n      jumpi\n        /* \"#utility.yul\":2876:2894   */\n      tag_94\n      tag_62\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":2860:2896   */\n    tag_93:\n        /* \"#utility.yul\":2712:2903   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2909:3103   */\n    tag_45:\n        /* \"#utility.yul\":2949:2953   */\n      0x00\n        /* \"#utility.yul\":2969:2989   */\n      tag_96\n        /* \"#utility.yul\":2987:2988   */\n      dup3\n        /* \"#utility.yul\":2969:2989   */\n      tag_55\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":2964:2989   */\n      swap2\n      pop\n        /* \"#utility.yul\":3003:3023   */\n      tag_97\n        /* \"#utility.yul\":3021:3022   */\n      dup4\n        /* \"#utility.yul\":3003:3023   */\n      tag_55\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":2998:3023   */\n      swap3\n      pop\n        /* \"#utility.yul\":3047:3048   */\n      dup3\n        /* \"#utility.yul\":3044:3045   */\n      dup3\n        /* \"#utility.yul\":3040:3049   */\n      sub\n        /* \"#utility.yul\":3032:3049   */\n      swap1\n      pop\n        /* \"#utility.yul\":3071:3072   */\n      dup2\n        /* \"#utility.yul\":3065:3069   */\n      dup2\n        /* \"#utility.yul\":3062:3073   */\n      gt\n        /* \"#utility.yul\":3059:3096   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":3076:3094   */\n      tag_99\n      tag_62\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":3059:3096   */\n    tag_98:\n        /* \"#utility.yul\":2909:3103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3109:3289   */\n    tag_63:\n        /* \"#utility.yul\":3157:3234   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3154:3155   */\n      0x00\n        /* \"#utility.yul\":3147:3235   */\n      mstore\n        /* \"#utility.yul\":3254:3258   */\n      0x12\n        /* \"#utility.yul\":3251:3252   */\n      0x04\n        /* \"#utility.yul\":3244:3259   */\n      mstore\n        /* \"#utility.yul\":3278:3282   */\n      0x24\n        /* \"#utility.yul\":3275:3276   */\n      0x00\n        /* \"#utility.yul\":3268:3283   */\n      revert\n        /* \"#utility.yul\":3295:3480   */\n    tag_48:\n        /* \"#utility.yul\":3335:3336   */\n      0x00\n        /* \"#utility.yul\":3352:3372   */\n      tag_102\n        /* \"#utility.yul\":3370:3371   */\n      dup3\n        /* \"#utility.yul\":3352:3372   */\n      tag_55\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":3347:3372   */\n      swap2\n      pop\n        /* \"#utility.yul\":3386:3406   */\n      tag_103\n        /* \"#utility.yul\":3404:3405   */\n      dup4\n        /* \"#utility.yul\":3386:3406   */\n      tag_55\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":3381:3406   */\n      swap3\n      pop\n        /* \"#utility.yul\":3425:3426   */\n      dup3\n        /* \"#utility.yul\":3415:3450   */\n      tag_104\n      jumpi\n        /* \"#utility.yul\":3430:3448   */\n      tag_105\n      tag_63\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":3415:3450   */\n    tag_104:\n        /* \"#utility.yul\":3472:3473   */\n      dup3\n        /* \"#utility.yul\":3469:3470   */\n      dup3\n        /* \"#utility.yul\":3465:3474   */\n      div\n        /* \"#utility.yul\":3460:3474   */\n      swap1\n      pop\n        /* \"#utility.yul\":3295:3480   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3486:3896   */\n    tag_51:\n        /* \"#utility.yul\":3526:3533   */\n      0x00\n        /* \"#utility.yul\":3549:3569   */\n      tag_107\n        /* \"#utility.yul\":3567:3568   */\n      dup3\n        /* \"#utility.yul\":3549:3569   */\n      tag_55\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":3544:3569   */\n      swap2\n      pop\n        /* \"#utility.yul\":3583:3603   */\n      tag_108\n        /* \"#utility.yul\":3601:3602   */\n      dup4\n        /* \"#utility.yul\":3583:3603   */\n      tag_55\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":3578:3603   */\n      swap3\n      pop\n        /* \"#utility.yul\":3638:3639   */\n      dup3\n        /* \"#utility.yul\":3635:3636   */\n      dup3\n        /* \"#utility.yul\":3631:3640   */\n      mul\n        /* \"#utility.yul\":3660:3690   */\n      tag_109\n        /* \"#utility.yul\":3678:3689   */\n      dup2\n        /* \"#utility.yul\":3660:3690   */\n      tag_55\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":3649:3690   */\n      swap2\n      pop\n        /* \"#utility.yul\":3839:3840   */\n      dup3\n        /* \"#utility.yul\":3830:3837   */\n      dup3\n        /* \"#utility.yul\":3826:3841   */\n      div\n        /* \"#utility.yul\":3823:3824   */\n      dup5\n        /* \"#utility.yul\":3820:3842   */\n      eq\n        /* \"#utility.yul\":3800:3801   */\n      dup4\n        /* \"#utility.yul\":3793:3802   */\n      iszero\n        /* \"#utility.yul\":3773:3856   */\n      or\n        /* \"#utility.yul\":3750:3889   */\n      tag_110\n      jumpi\n        /* \"#utility.yul\":3869:3887   */\n      tag_111\n      tag_62\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":3750:3889   */\n    tag_110:\n        /* \"#utility.yul\":3534:3896   */\n      pop\n        /* \"#utility.yul\":3486:3896   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e3283527bbf5243667d6e37b3c411496f57948443b97379c77d1107c9a99594d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_327": {
									"entryPoint": null,
									"id": 327,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b505f808190555061045b806100225f395ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c80631003e2d2146100595780631dc05f17146100755780632ddbd13a146100915780633e823f79146100af578063c6888fa1146100cb575b5f80fd5b610073600480360381019061006e9190610229565b6100e7565b005b61008f600480360381019061008a9190610229565b610103565b005b61009961011f565b6040516100a69190610263565b60405180910390f35b6100c960048036038101906100c49190610229565b610124565b005b6100e560048036038101906100e09190610229565b610182565b005b6100fb815f5461019e90919063ffffffff16565b5f8190555050565b610117815f546101b390919063ffffffff16565b5f8190555050565b5f5481565b5f8111610166576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015d906102d6565b60405180910390fd5b61017a815f546101c890919063ffffffff16565b5f8190555050565b610196815f546101dd90919063ffffffff16565b5f8190555050565b5f81836101ab9190610321565b905092915050565b5f81836101c09190610354565b905092915050565b5f81836101d591906103b4565b905092915050565b5f81836101ea91906103e4565b905092915050565b5f80fd5b5f819050919050565b610208816101f6565b8114610212575f80fd5b50565b5f81359050610223816101ff565b92915050565b5f6020828403121561023e5761023d6101f2565b5b5f61024b84828501610215565b91505092915050565b61025d816101f6565b82525050565b5f6020820190506102765f830184610254565b92915050565b5f82825260208201905092915050565b7f43616e6e6f7420646976696465206279207a65726f00000000000000000000005f82015250565b5f6102c060158361027c565b91506102cb8261028c565b602082019050919050565b5f6020820190508181035f8301526102ed816102b4565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61032b826101f6565b9150610336836101f6565b925082820190508082111561034e5761034d6102f4565b5b92915050565b5f61035e826101f6565b9150610369836101f6565b9250828203905081811115610381576103806102f4565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6103be826101f6565b91506103c9836101f6565b9250826103d9576103d8610387565b5b828204905092915050565b5f6103ee826101f6565b91506103f9836101f6565b9250828202610407816101f6565b9150828204841483151761041e5761041d6102f4565b5b509291505056fea2646970667358221220e3283527bbf5243667d6e37b3c411496f57948443b97379c77d1107c9a99594d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x45B DUP1 PUSH2 0x22 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1003E2D2 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x1DC05F17 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x2DDBD13A EQ PUSH2 0x91 JUMPI DUP1 PUSH4 0x3E823F79 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0xC6888FA1 EQ PUSH2 0xCB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x229 JUMP JUMPDEST PUSH2 0xE7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8A SWAP2 SWAP1 PUSH2 0x229 JUMP JUMPDEST PUSH2 0x103 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x99 PUSH2 0x11F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x263 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0x229 JUMP JUMPDEST PUSH2 0x124 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x229 JUMP JUMPDEST PUSH2 0x182 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFB DUP2 PUSH0 SLOAD PUSH2 0x19E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x117 DUP2 PUSH0 SLOAD PUSH2 0x1B3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x166 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D SWAP1 PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17A DUP2 PUSH0 SLOAD PUSH2 0x1C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x196 DUP2 PUSH0 SLOAD PUSH2 0x1DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x321 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x354 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x3B4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x3E4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x208 DUP2 PUSH2 0x1F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x212 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x223 DUP2 PUSH2 0x1FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23E JUMPI PUSH2 0x23D PUSH2 0x1F2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24B DUP5 DUP3 DUP6 ADD PUSH2 0x215 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25D DUP2 PUSH2 0x1F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x276 PUSH0 DUP4 ADD DUP5 PUSH2 0x254 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420646976696465206279207A65726F0000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C0 PUSH1 0x15 DUP4 PUSH2 0x27C JUMP JUMPDEST SWAP2 POP PUSH2 0x2CB DUP3 PUSH2 0x28C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2ED DUP2 PUSH2 0x2B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x32B DUP3 PUSH2 0x1F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x336 DUP4 PUSH2 0x1F6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x34E JUMPI PUSH2 0x34D PUSH2 0x2F4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x35E DUP3 PUSH2 0x1F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x369 DUP4 PUSH2 0x1F6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x381 JUMPI PUSH2 0x380 PUSH2 0x2F4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x3BE DUP3 PUSH2 0x1F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C9 DUP4 PUSH2 0x1F6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3D9 JUMPI PUSH2 0x3D8 PUSH2 0x387 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3EE DUP3 PUSH2 0x1F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F9 DUP4 PUSH2 0x1F6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x407 DUP2 PUSH2 0x1F6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x41E JUMPI PUSH2 0x41D PUSH2 0x2F4 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 0x28 CALLDATALOAD 0x27 0xBB CREATE2 0x24 CALLDATASIZE PUSH8 0xD6E37B3C411496F5 PUSH26 0x48443B97379C77D1107C9A99594D64736F6C634300081A003300 ",
							"sourceMap": "121:988:1:-:0;;;361:42;;;;;;;;;;394:1;386:5;:9;;;;121:988;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@add_175": {
									"entryPoint": 414,
									"id": 175,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@add_340": {
									"entryPoint": 231,
									"id": 340,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@div_220": {
									"entryPoint": 456,
									"id": 220,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@divide_386": {
									"entryPoint": 292,
									"id": 386,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@mul_205": {
									"entryPoint": 477,
									"id": 205,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@multiply_366": {
									"entryPoint": 386,
									"id": 366,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sub_190": {
									"entryPoint": 435,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@subtract_353": {
									"entryPoint": 259,
									"id": 353,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@total_319": {
									"entryPoint": 287,
									"id": 319,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_622c26413b06464e69496be671ab0fcebbc899479bb0dd81b3f6dda96feeb74b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_622c26413b06464e69496be671ab0fcebbc899479bb0dd81b3f6dda96feeb74b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 756,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 903,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 498,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_622c26413b06464e69496be671ab0fcebbc899479bb0dd81b3f6dda96feeb74b": {
									"entryPoint": 652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3899:2",
										"nodeType": "YulBlock",
										"src": "0:3899:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:2",
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nativeSrc": "57:19:2",
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:2",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nativeSrc": "67:9:2",
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:2",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nativeSrc": "177:28:2",
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:2",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:2",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nativeSrc": "187:12:2",
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nativeSrc": "187:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nativeSrc": "300:28:2",
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:2",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:2",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nativeSrc": "310:12:2",
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nativeSrc": "310:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nativeSrc": "379:32:2",
													"nodeType": "YulBlock",
													"src": "379:32:2",
													"statements": [
														{
															"nativeSrc": "389:16:2",
															"nodeType": "YulAssignment",
															"src": "389:16:2",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:2",
																"nodeType": "YulIdentifier",
																"src": "400:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:2",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:2",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:77:2"
											},
											{
												"body": {
													"nativeSrc": "460:79:2",
													"nodeType": "YulBlock",
													"src": "460:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:2",
																"nodeType": "YulBlock",
																"src": "517:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:2",
																					"nodeType": "YulLiteral",
																					"src": "526:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:2",
																					"nodeType": "YulLiteral",
																					"src": "529:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:2"
																			},
																			"nativeSrc": "519:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:2"
																		},
																		"nativeSrc": "519:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:2"
																				},
																				"nativeSrc": "490:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:2"
																		},
																		"nativeSrc": "480:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:2"
																},
																"nativeSrc": "473:43:2",
																"nodeType": "YulFunctionCall",
																"src": "473:43:2"
															},
															"nativeSrc": "470:63:2",
															"nodeType": "YulIf",
															"src": "470:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:2",
														"nodeType": "YulTypedName",
														"src": "453:5:2",
														"type": ""
													}
												],
												"src": "417:122:2"
											},
											{
												"body": {
													"nativeSrc": "597:87:2",
													"nodeType": "YulBlock",
													"src": "597:87:2",
													"statements": [
														{
															"nativeSrc": "607:29:2",
															"nodeType": "YulAssignment",
															"src": "607:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:2"
																},
																"nativeSrc": "616:20:2",
																"nodeType": "YulFunctionCall",
																"src": "616:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:2"
																},
																"nativeSrc": "645:33:2",
																"nodeType": "YulFunctionCall",
																"src": "645:33:2"
															},
															"nativeSrc": "645:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:2",
														"nodeType": "YulTypedName",
														"src": "575:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:2",
														"nodeType": "YulTypedName",
														"src": "583:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:2",
														"nodeType": "YulTypedName",
														"src": "591:5:2",
														"type": ""
													}
												],
												"src": "545:139:2"
											},
											{
												"body": {
													"nativeSrc": "756:263:2",
													"nodeType": "YulBlock",
													"src": "756:263:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:2",
																"nodeType": "YulBlock",
																"src": "802:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:2"
																			},
																			"nativeSrc": "804:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:2"
																		},
																		"nativeSrc": "804:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:2"
																		},
																		"nativeSrc": "773:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:2",
																		"nodeType": "YulLiteral",
																		"src": "798:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:2"
																},
																"nativeSrc": "769:32:2",
																"nodeType": "YulFunctionCall",
																"src": "769:32:2"
															},
															"nativeSrc": "766:119:2",
															"nodeType": "YulIf",
															"src": "766:119:2"
														},
														{
															"nativeSrc": "895:117:2",
															"nodeType": "YulBlock",
															"src": "895:117:2",
															"statements": [
																{
																	"nativeSrc": "910:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:2",
																		"nodeType": "YulLiteral",
																		"src": "924:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:2",
																			"nodeType": "YulTypedName",
																			"src": "914:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:2",
																	"nodeType": "YulAssignment",
																	"src": "939:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:2"
																				},
																				"nativeSrc": "970:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:2"
																		},
																		"nativeSrc": "949:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:2",
														"nodeType": "YulTypedName",
														"src": "726:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:2",
														"nodeType": "YulTypedName",
														"src": "737:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:2",
														"nodeType": "YulTypedName",
														"src": "749:6:2",
														"type": ""
													}
												],
												"src": "690:329:2"
											},
											{
												"body": {
													"nativeSrc": "1090:53:2",
													"nodeType": "YulBlock",
													"src": "1090:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1107:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1130:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1112:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:2"
																		},
																		"nativeSrc": "1112:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1100:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:2"
																},
																"nativeSrc": "1100:37:2",
																"nodeType": "YulFunctionCall",
																"src": "1100:37:2"
															},
															"nativeSrc": "1100:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1025:118:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1078:5:2",
														"nodeType": "YulTypedName",
														"src": "1078:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1085:3:2",
														"nodeType": "YulTypedName",
														"src": "1085:3:2",
														"type": ""
													}
												],
												"src": "1025:118:2"
											},
											{
												"body": {
													"nativeSrc": "1247:124:2",
													"nodeType": "YulBlock",
													"src": "1247:124:2",
													"statements": [
														{
															"nativeSrc": "1257:26:2",
															"nodeType": "YulAssignment",
															"src": "1257:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1269:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1280:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1265:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:2"
																},
																"nativeSrc": "1265:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1265:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1257:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1337:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1350:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1361:1:2",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1346:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:2"
																		},
																		"nativeSrc": "1346:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1293:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:2"
																},
																"nativeSrc": "1293:71:2",
																"nodeType": "YulFunctionCall",
																"src": "1293:71:2"
															},
															"nativeSrc": "1293:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1149:222:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1219:9:2",
														"nodeType": "YulTypedName",
														"src": "1219:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1231:6:2",
														"nodeType": "YulTypedName",
														"src": "1231:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1242:4:2",
														"nodeType": "YulTypedName",
														"src": "1242:4:2",
														"type": ""
													}
												],
												"src": "1149:222:2"
											},
											{
												"body": {
													"nativeSrc": "1473:73:2",
													"nodeType": "YulBlock",
													"src": "1473:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1490:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1490:3:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1495:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1495:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1483:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1483:6:2"
																},
																"nativeSrc": "1483:19:2",
																"nodeType": "YulFunctionCall",
																"src": "1483:19:2"
															},
															"nativeSrc": "1483:19:2",
															"nodeType": "YulExpressionStatement",
															"src": "1483:19:2"
														},
														{
															"nativeSrc": "1511:29:2",
															"nodeType": "YulAssignment",
															"src": "1511:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1530:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1530:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1535:4:2",
																		"nodeType": "YulLiteral",
																		"src": "1535:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1526:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1526:3:2"
																},
																"nativeSrc": "1526:14:2",
																"nodeType": "YulFunctionCall",
																"src": "1526:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1511:11:2",
																	"nodeType": "YulIdentifier",
																	"src": "1511:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1377:169:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1445:3:2",
														"nodeType": "YulTypedName",
														"src": "1445:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1450:6:2",
														"nodeType": "YulTypedName",
														"src": "1450:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1461:11:2",
														"nodeType": "YulTypedName",
														"src": "1461:11:2",
														"type": ""
													}
												],
												"src": "1377:169:2"
											},
											{
												"body": {
													"nativeSrc": "1658:65:2",
													"nodeType": "YulBlock",
													"src": "1658:65:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1680:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1680:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1688:1:2",
																				"nodeType": "YulLiteral",
																				"src": "1688:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1676:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1676:3:2"
																		},
																		"nativeSrc": "1676:14:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1676:14:2"
																	},
																	{
																		"hexValue": "43616e6e6f7420646976696465206279207a65726f",
																		"kind": "string",
																		"nativeSrc": "1692:23:2",
																		"nodeType": "YulLiteral",
																		"src": "1692:23:2",
																		"type": "",
																		"value": "Cannot divide by zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1669:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1669:6:2"
																},
																"nativeSrc": "1669:47:2",
																"nodeType": "YulFunctionCall",
																"src": "1669:47:2"
															},
															"nativeSrc": "1669:47:2",
															"nodeType": "YulExpressionStatement",
															"src": "1669:47:2"
														}
													]
												},
												"name": "store_literal_in_memory_622c26413b06464e69496be671ab0fcebbc899479bb0dd81b3f6dda96feeb74b",
												"nativeSrc": "1552:171:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1650:6:2",
														"nodeType": "YulTypedName",
														"src": "1650:6:2",
														"type": ""
													}
												],
												"src": "1552:171:2"
											},
											{
												"body": {
													"nativeSrc": "1875:220:2",
													"nodeType": "YulBlock",
													"src": "1875:220:2",
													"statements": [
														{
															"nativeSrc": "1885:74:2",
															"nodeType": "YulAssignment",
															"src": "1885:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1951:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1951:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1956:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1956:2:2",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1892:58:2",
																	"nodeType": "YulIdentifier",
																	"src": "1892:58:2"
																},
																"nativeSrc": "1892:67:2",
																"nodeType": "YulFunctionCall",
																"src": "1892:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1885:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1885:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2057:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2057:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_622c26413b06464e69496be671ab0fcebbc899479bb0dd81b3f6dda96feeb74b",
																	"nativeSrc": "1968:88:2",
																	"nodeType": "YulIdentifier",
																	"src": "1968:88:2"
																},
																"nativeSrc": "1968:93:2",
																"nodeType": "YulFunctionCall",
																"src": "1968:93:2"
															},
															"nativeSrc": "1968:93:2",
															"nodeType": "YulExpressionStatement",
															"src": "1968:93:2"
														},
														{
															"nativeSrc": "2070:19:2",
															"nodeType": "YulAssignment",
															"src": "2070:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2081:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2081:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2086:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2086:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2077:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2077:3:2"
																},
																"nativeSrc": "2077:12:2",
																"nodeType": "YulFunctionCall",
																"src": "2077:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2070:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2070:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_622c26413b06464e69496be671ab0fcebbc899479bb0dd81b3f6dda96feeb74b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1729:366:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1863:3:2",
														"nodeType": "YulTypedName",
														"src": "1863:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1871:3:2",
														"nodeType": "YulTypedName",
														"src": "1871:3:2",
														"type": ""
													}
												],
												"src": "1729:366:2"
											},
											{
												"body": {
													"nativeSrc": "2272:248:2",
													"nodeType": "YulBlock",
													"src": "2272:248:2",
													"statements": [
														{
															"nativeSrc": "2282:26:2",
															"nodeType": "YulAssignment",
															"src": "2282:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2294:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2294:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2305:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2305:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2290:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2290:3:2"
																},
																"nativeSrc": "2290:18:2",
																"nodeType": "YulFunctionCall",
																"src": "2290:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2282:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2282:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2329:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2329:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2340:1:2",
																				"nodeType": "YulLiteral",
																				"src": "2340:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2325:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2325:3:2"
																		},
																		"nativeSrc": "2325:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2325:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2348:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "2348:4:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2354:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2354:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2344:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2344:3:2"
																		},
																		"nativeSrc": "2344:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2344:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2318:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2318:6:2"
																},
																"nativeSrc": "2318:47:2",
																"nodeType": "YulFunctionCall",
																"src": "2318:47:2"
															},
															"nativeSrc": "2318:47:2",
															"nodeType": "YulExpressionStatement",
															"src": "2318:47:2"
														},
														{
															"nativeSrc": "2374:139:2",
															"nodeType": "YulAssignment",
															"src": "2374:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2508:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "2508:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_622c26413b06464e69496be671ab0fcebbc899479bb0dd81b3f6dda96feeb74b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2382:124:2",
																	"nodeType": "YulIdentifier",
																	"src": "2382:124:2"
																},
																"nativeSrc": "2382:131:2",
																"nodeType": "YulFunctionCall",
																"src": "2382:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2374:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2374:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_622c26413b06464e69496be671ab0fcebbc899479bb0dd81b3f6dda96feeb74b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2101:419:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2252:9:2",
														"nodeType": "YulTypedName",
														"src": "2252:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2267:4:2",
														"nodeType": "YulTypedName",
														"src": "2267:4:2",
														"type": ""
													}
												],
												"src": "2101:419:2"
											},
											{
												"body": {
													"nativeSrc": "2554:152:2",
													"nodeType": "YulBlock",
													"src": "2554:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2571:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2571:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2574:77:2",
																		"nodeType": "YulLiteral",
																		"src": "2574:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2564:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2564:6:2"
																},
																"nativeSrc": "2564:88:2",
																"nodeType": "YulFunctionCall",
																"src": "2564:88:2"
															},
															"nativeSrc": "2564:88:2",
															"nodeType": "YulExpressionStatement",
															"src": "2564:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2668:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2668:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2671:4:2",
																		"nodeType": "YulLiteral",
																		"src": "2671:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2661:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2661:6:2"
																},
																"nativeSrc": "2661:15:2",
																"nodeType": "YulFunctionCall",
																"src": "2661:15:2"
															},
															"nativeSrc": "2661:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "2661:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2692:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2692:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2695:4:2",
																		"nodeType": "YulLiteral",
																		"src": "2695:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2685:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2685:6:2"
																},
																"nativeSrc": "2685:15:2",
																"nodeType": "YulFunctionCall",
																"src": "2685:15:2"
															},
															"nativeSrc": "2685:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "2685:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2526:180:2",
												"nodeType": "YulFunctionDefinition",
												"src": "2526:180:2"
											},
											{
												"body": {
													"nativeSrc": "2756:147:2",
													"nodeType": "YulBlock",
													"src": "2756:147:2",
													"statements": [
														{
															"nativeSrc": "2766:25:2",
															"nodeType": "YulAssignment",
															"src": "2766:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2789:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2789:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2771:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "2771:17:2"
																},
																"nativeSrc": "2771:20:2",
																"nodeType": "YulFunctionCall",
																"src": "2771:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2766:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "2766:1:2"
																}
															]
														},
														{
															"nativeSrc": "2800:25:2",
															"nodeType": "YulAssignment",
															"src": "2800:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2823:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2823:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2805:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "2805:17:2"
																},
																"nativeSrc": "2805:20:2",
																"nodeType": "YulFunctionCall",
																"src": "2805:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2800:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "2800:1:2"
																}
															]
														},
														{
															"nativeSrc": "2834:16:2",
															"nodeType": "YulAssignment",
															"src": "2834:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2845:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2845:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2848:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2848:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2841:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2841:3:2"
																},
																"nativeSrc": "2841:9:2",
																"nodeType": "YulFunctionCall",
																"src": "2841:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2834:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2834:3:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2874:22:2",
																"nodeType": "YulBlock",
																"src": "2874:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2876:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "2876:16:2"
																			},
																			"nativeSrc": "2876:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2876:18:2"
																		},
																		"nativeSrc": "2876:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2876:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2866:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2866:1:2"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2869:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2869:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2863:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "2863:2:2"
																},
																"nativeSrc": "2863:10:2",
																"nodeType": "YulFunctionCall",
																"src": "2863:10:2"
															},
															"nativeSrc": "2860:36:2",
															"nodeType": "YulIf",
															"src": "2860:36:2"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2712:191:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2743:1:2",
														"nodeType": "YulTypedName",
														"src": "2743:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2746:1:2",
														"nodeType": "YulTypedName",
														"src": "2746:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2752:3:2",
														"nodeType": "YulTypedName",
														"src": "2752:3:2",
														"type": ""
													}
												],
												"src": "2712:191:2"
											},
											{
												"body": {
													"nativeSrc": "2954:149:2",
													"nodeType": "YulBlock",
													"src": "2954:149:2",
													"statements": [
														{
															"nativeSrc": "2964:25:2",
															"nodeType": "YulAssignment",
															"src": "2964:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2987:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2987:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2969:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "2969:17:2"
																},
																"nativeSrc": "2969:20:2",
																"nodeType": "YulFunctionCall",
																"src": "2969:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2964:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "2964:1:2"
																}
															]
														},
														{
															"nativeSrc": "2998:25:2",
															"nodeType": "YulAssignment",
															"src": "2998:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3021:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3021:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3003:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "3003:17:2"
																},
																"nativeSrc": "3003:20:2",
																"nodeType": "YulFunctionCall",
																"src": "3003:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2998:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "2998:1:2"
																}
															]
														},
														{
															"nativeSrc": "3032:17:2",
															"nodeType": "YulAssignment",
															"src": "3032:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3044:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3044:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3047:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3047:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3040:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3040:3:2"
																},
																"nativeSrc": "3040:9:2",
																"nodeType": "YulFunctionCall",
																"src": "3040:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "3032:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "3032:4:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3074:22:2",
																"nodeType": "YulBlock",
																"src": "3074:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3076:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "3076:16:2"
																			},
																			"nativeSrc": "3076:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3076:18:2"
																		},
																		"nativeSrc": "3076:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "3076:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "3065:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "3065:4:2"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "3071:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3071:1:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3062:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "3062:2:2"
																},
																"nativeSrc": "3062:11:2",
																"nodeType": "YulFunctionCall",
																"src": "3062:11:2"
															},
															"nativeSrc": "3059:37:2",
															"nodeType": "YulIf",
															"src": "3059:37:2"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "2909:194:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2940:1:2",
														"nodeType": "YulTypedName",
														"src": "2940:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2943:1:2",
														"nodeType": "YulTypedName",
														"src": "2943:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "2949:4:2",
														"nodeType": "YulTypedName",
														"src": "2949:4:2",
														"type": ""
													}
												],
												"src": "2909:194:2"
											},
											{
												"body": {
													"nativeSrc": "3137:152:2",
													"nodeType": "YulBlock",
													"src": "3137:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3154:1:2",
																		"nodeType": "YulLiteral",
																		"src": "3154:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3157:77:2",
																		"nodeType": "YulLiteral",
																		"src": "3157:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3147:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3147:6:2"
																},
																"nativeSrc": "3147:88:2",
																"nodeType": "YulFunctionCall",
																"src": "3147:88:2"
															},
															"nativeSrc": "3147:88:2",
															"nodeType": "YulExpressionStatement",
															"src": "3147:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3251:1:2",
																		"nodeType": "YulLiteral",
																		"src": "3251:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3254:4:2",
																		"nodeType": "YulLiteral",
																		"src": "3254:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3244:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3244:6:2"
																},
																"nativeSrc": "3244:15:2",
																"nodeType": "YulFunctionCall",
																"src": "3244:15:2"
															},
															"nativeSrc": "3244:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "3244:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3275:1:2",
																		"nodeType": "YulLiteral",
																		"src": "3275:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3278:4:2",
																		"nodeType": "YulLiteral",
																		"src": "3278:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3268:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3268:6:2"
																},
																"nativeSrc": "3268:15:2",
																"nodeType": "YulFunctionCall",
																"src": "3268:15:2"
															},
															"nativeSrc": "3268:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "3268:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "3109:180:2",
												"nodeType": "YulFunctionDefinition",
												"src": "3109:180:2"
											},
											{
												"body": {
													"nativeSrc": "3337:143:2",
													"nodeType": "YulBlock",
													"src": "3337:143:2",
													"statements": [
														{
															"nativeSrc": "3347:25:2",
															"nodeType": "YulAssignment",
															"src": "3347:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3370:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3370:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3352:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "3352:17:2"
																},
																"nativeSrc": "3352:20:2",
																"nodeType": "YulFunctionCall",
																"src": "3352:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3347:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "3347:1:2"
																}
															]
														},
														{
															"nativeSrc": "3381:25:2",
															"nodeType": "YulAssignment",
															"src": "3381:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3404:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3404:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3386:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "3386:17:2"
																},
																"nativeSrc": "3386:20:2",
																"nodeType": "YulFunctionCall",
																"src": "3386:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3381:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "3381:1:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3428:22:2",
																"nodeType": "YulBlock",
																"src": "3428:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "3430:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "3430:16:2"
																			},
																			"nativeSrc": "3430:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3430:18:2"
																		},
																		"nativeSrc": "3430:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "3430:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3425:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3425:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3418:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3418:6:2"
																},
																"nativeSrc": "3418:9:2",
																"nodeType": "YulFunctionCall",
																"src": "3418:9:2"
															},
															"nativeSrc": "3415:35:2",
															"nodeType": "YulIf",
															"src": "3415:35:2"
														},
														{
															"nativeSrc": "3460:14:2",
															"nodeType": "YulAssignment",
															"src": "3460:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3469:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3469:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3472:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3472:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3465:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3465:3:2"
																},
																"nativeSrc": "3465:9:2",
																"nodeType": "YulFunctionCall",
																"src": "3465:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "3460:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "3460:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "3295:185:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3326:1:2",
														"nodeType": "YulTypedName",
														"src": "3326:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3329:1:2",
														"nodeType": "YulTypedName",
														"src": "3329:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "3335:1:2",
														"nodeType": "YulTypedName",
														"src": "3335:1:2",
														"type": ""
													}
												],
												"src": "3295:185:2"
											},
											{
												"body": {
													"nativeSrc": "3534:362:2",
													"nodeType": "YulBlock",
													"src": "3534:362:2",
													"statements": [
														{
															"nativeSrc": "3544:25:2",
															"nodeType": "YulAssignment",
															"src": "3544:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3567:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3567:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3549:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "3549:17:2"
																},
																"nativeSrc": "3549:20:2",
																"nodeType": "YulFunctionCall",
																"src": "3549:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3544:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "3544:1:2"
																}
															]
														},
														{
															"nativeSrc": "3578:25:2",
															"nodeType": "YulAssignment",
															"src": "3578:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3601:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3601:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3583:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "3583:17:2"
																},
																"nativeSrc": "3583:20:2",
																"nodeType": "YulFunctionCall",
																"src": "3583:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3578:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "3578:1:2"
																}
															]
														},
														{
															"nativeSrc": "3612:28:2",
															"nodeType": "YulVariableDeclaration",
															"src": "3612:28:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3635:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3635:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3638:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3638:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3631:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3631:3:2"
																},
																"nativeSrc": "3631:9:2",
																"nodeType": "YulFunctionCall",
																"src": "3631:9:2"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "3616:11:2",
																	"nodeType": "YulTypedName",
																	"src": "3616:11:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3649:41:2",
															"nodeType": "YulAssignment",
															"src": "3649:41:2",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "3678:11:2",
																		"nodeType": "YulIdentifier",
																		"src": "3678:11:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3660:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "3660:17:2"
																},
																"nativeSrc": "3660:30:2",
																"nodeType": "YulFunctionCall",
																"src": "3660:30:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "3649:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "3649:7:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3867:22:2",
																"nodeType": "YulBlock",
																"src": "3867:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3869:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "3869:16:2"
																			},
																			"nativeSrc": "3869:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3869:18:2"
																		},
																		"nativeSrc": "3869:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "3869:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "3800:1:2",
																						"nodeType": "YulIdentifier",
																						"src": "3800:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3793:6:2",
																					"nodeType": "YulIdentifier",
																					"src": "3793:6:2"
																				},
																				"nativeSrc": "3793:9:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3793:9:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "3823:1:2",
																						"nodeType": "YulIdentifier",
																						"src": "3823:1:2"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "3830:7:2",
																								"nodeType": "YulIdentifier",
																								"src": "3830:7:2"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "3839:1:2",
																								"nodeType": "YulIdentifier",
																								"src": "3839:1:2"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "3826:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "3826:3:2"
																						},
																						"nativeSrc": "3826:15:2",
																						"nodeType": "YulFunctionCall",
																						"src": "3826:15:2"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "3820:2:2",
																					"nodeType": "YulIdentifier",
																					"src": "3820:2:2"
																				},
																				"nativeSrc": "3820:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3820:22:2"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "3773:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "3773:2:2"
																		},
																		"nativeSrc": "3773:83:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3773:83:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3753:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:2"
																},
																"nativeSrc": "3753:113:2",
																"nodeType": "YulFunctionCall",
																"src": "3753:113:2"
															},
															"nativeSrc": "3750:139:2",
															"nodeType": "YulIf",
															"src": "3750:139:2"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "3486:410:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3517:1:2",
														"nodeType": "YulTypedName",
														"src": "3517:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3520:1:2",
														"nodeType": "YulTypedName",
														"src": "3520:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "3526:7:2",
														"nodeType": "YulTypedName",
														"src": "3526:7:2",
														"type": ""
													}
												],
												"src": "3486:410:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_622c26413b06464e69496be671ab0fcebbc899479bb0dd81b3f6dda96feeb74b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot divide by zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_622c26413b06464e69496be671ab0fcebbc899479bb0dd81b3f6dda96feeb74b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_622c26413b06464e69496be671ab0fcebbc899479bb0dd81b3f6dda96feeb74b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_622c26413b06464e69496be671ab0fcebbc899479bb0dd81b3f6dda96feeb74b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_622c26413b06464e69496be671ab0fcebbc899479bb0dd81b3f6dda96feeb74b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610055575f3560e01c80631003e2d2146100595780631dc05f17146100755780632ddbd13a146100915780633e823f79146100af578063c6888fa1146100cb575b5f80fd5b610073600480360381019061006e9190610229565b6100e7565b005b61008f600480360381019061008a9190610229565b610103565b005b61009961011f565b6040516100a69190610263565b60405180910390f35b6100c960048036038101906100c49190610229565b610124565b005b6100e560048036038101906100e09190610229565b610182565b005b6100fb815f5461019e90919063ffffffff16565b5f8190555050565b610117815f546101b390919063ffffffff16565b5f8190555050565b5f5481565b5f8111610166576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015d906102d6565b60405180910390fd5b61017a815f546101c890919063ffffffff16565b5f8190555050565b610196815f546101dd90919063ffffffff16565b5f8190555050565b5f81836101ab9190610321565b905092915050565b5f81836101c09190610354565b905092915050565b5f81836101d591906103b4565b905092915050565b5f81836101ea91906103e4565b905092915050565b5f80fd5b5f819050919050565b610208816101f6565b8114610212575f80fd5b50565b5f81359050610223816101ff565b92915050565b5f6020828403121561023e5761023d6101f2565b5b5f61024b84828501610215565b91505092915050565b61025d816101f6565b82525050565b5f6020820190506102765f830184610254565b92915050565b5f82825260208201905092915050565b7f43616e6e6f7420646976696465206279207a65726f00000000000000000000005f82015250565b5f6102c060158361027c565b91506102cb8261028c565b602082019050919050565b5f6020820190508181035f8301526102ed816102b4565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61032b826101f6565b9150610336836101f6565b925082820190508082111561034e5761034d6102f4565b5b92915050565b5f61035e826101f6565b9150610369836101f6565b9250828203905081811115610381576103806102f4565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6103be826101f6565b91506103c9836101f6565b9250826103d9576103d8610387565b5b828204905092915050565b5f6103ee826101f6565b91506103f9836101f6565b9250828202610407816101f6565b9150828204841483151761041e5761041d6102f4565b5b509291505056fea2646970667358221220e3283527bbf5243667d6e37b3c411496f57948443b97379c77d1107c9a99594d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1003E2D2 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x1DC05F17 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x2DDBD13A EQ PUSH2 0x91 JUMPI DUP1 PUSH4 0x3E823F79 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0xC6888FA1 EQ PUSH2 0xCB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x229 JUMP JUMPDEST PUSH2 0xE7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8A SWAP2 SWAP1 PUSH2 0x229 JUMP JUMPDEST PUSH2 0x103 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x99 PUSH2 0x11F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x263 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0x229 JUMP JUMPDEST PUSH2 0x124 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x229 JUMP JUMPDEST PUSH2 0x182 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFB DUP2 PUSH0 SLOAD PUSH2 0x19E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x117 DUP2 PUSH0 SLOAD PUSH2 0x1B3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x166 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D SWAP1 PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17A DUP2 PUSH0 SLOAD PUSH2 0x1C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x196 DUP2 PUSH0 SLOAD PUSH2 0x1DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x321 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x354 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x3B4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x3E4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x208 DUP2 PUSH2 0x1F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x212 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x223 DUP2 PUSH2 0x1FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23E JUMPI PUSH2 0x23D PUSH2 0x1F2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24B DUP5 DUP3 DUP6 ADD PUSH2 0x215 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25D DUP2 PUSH2 0x1F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x276 PUSH0 DUP4 ADD DUP5 PUSH2 0x254 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420646976696465206279207A65726F0000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C0 PUSH1 0x15 DUP4 PUSH2 0x27C JUMP JUMPDEST SWAP2 POP PUSH2 0x2CB DUP3 PUSH2 0x28C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2ED DUP2 PUSH2 0x2B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x32B DUP3 PUSH2 0x1F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x336 DUP4 PUSH2 0x1F6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x34E JUMPI PUSH2 0x34D PUSH2 0x2F4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x35E DUP3 PUSH2 0x1F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x369 DUP4 PUSH2 0x1F6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x381 JUMPI PUSH2 0x380 PUSH2 0x2F4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x3BE DUP3 PUSH2 0x1F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C9 DUP4 PUSH2 0x1F6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3D9 JUMPI PUSH2 0x3D8 PUSH2 0x387 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3EE DUP3 PUSH2 0x1F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F9 DUP4 PUSH2 0x1F6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x407 DUP2 PUSH2 0x1F6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x41E JUMPI PUSH2 0x41D PUSH2 0x2F4 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 0x28 CALLDATALOAD 0x27 0xBB CREATE2 0x24 CALLDATASIZE PUSH8 0xD6E37B3C411496F5 PUSH26 0x48443B97379C77D1107C9A99594D64736F6C634300081A003300 ",
							"sourceMap": "121:988:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:124;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;640:130;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;282:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;969:137;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;828:85;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;456:124;556:16;566:5;556;;:9;;:16;;;;:::i;:::-;548:5;:24;;;;456:124;:::o;640:130::-;746:16;756:5;746;;:9;;:16;;;;:::i;:::-;738:5;:24;;;;640:130;:::o;282:20::-;;;;:::o;969:137::-;1036:1;1028:5;:9;1020:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;1082:16;1092:5;1082;;:9;;:16;;;;:::i;:::-;1074:5;:24;;;;969:137;:::o;828:85::-;889:16;899:5;889;;:9;;:16;;;;:::i;:::-;881:5;:24;;;;828:85;:::o;2755:96:0:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;3122:::-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;3465:::-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;88:117:2:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:169::-;1461:11;1495:6;1490:3;1483:19;1535:4;1530:3;1526:14;1511:29;;1377:169;;;;:::o;1552:171::-;1692:23;1688:1;1680:6;1676:14;1669:47;1552:171;:::o;1729:366::-;1871:3;1892:67;1956:2;1951:3;1892:67;:::i;:::-;1885:74;;1968:93;2057:3;1968:93;:::i;:::-;2086:2;2081:3;2077:12;2070:19;;1729:366;;;:::o;2101:419::-;2267:4;2305:2;2294:9;2290:18;2282:26;;2354:9;2348:4;2344:20;2340:1;2329:9;2325:17;2318:47;2382:131;2508:4;2382:131;:::i;:::-;2374:139;;2101:419;;;:::o;2526:180::-;2574:77;2571:1;2564:88;2671:4;2668:1;2661:15;2695:4;2692:1;2685:15;2712:191;2752:3;2771:20;2789:1;2771:20;:::i;:::-;2766:25;;2805:20;2823:1;2805:20;:::i;:::-;2800:25;;2848:1;2845;2841:9;2834:16;;2869:3;2866:1;2863:10;2860:36;;;2876:18;;:::i;:::-;2860:36;2712:191;;;;:::o;2909:194::-;2949:4;2969:20;2987:1;2969:20;:::i;:::-;2964:25;;3003:20;3021:1;3003:20;:::i;:::-;2998:25;;3047:1;3044;3040:9;3032:17;;3071:1;3065:4;3062:11;3059:37;;;3076:18;;:::i;:::-;3059:37;2909:194;;;;:::o;3109:180::-;3157:77;3154:1;3147:88;3254:4;3251:1;3244:15;3278:4;3275:1;3268:15;3295:185;3335:1;3352:20;3370:1;3352:20;:::i;:::-;3347:25;;3386:20;3404:1;3386:20;:::i;:::-;3381:25;;3425:1;3415:35;;3430:18;;:::i;:::-;3415:35;3472:1;3469;3465:9;3460:14;;3295:185;;;;:::o;3486:410::-;3526:7;3549:20;3567:1;3549:20;:::i;:::-;3544:25;;3583:20;3601:1;3583:20;:::i;:::-;3578:25;;3638:1;3635;3631:9;3660:30;3678:11;3660:30;:::i;:::-;3649:41;;3839:1;3830:7;3826:15;3823:1;3820:22;3800:1;3793:9;3773:83;3750:139;;3869:18;;:::i;:::-;3750:139;3534:362;3486:410;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "223000",
								"executionCost": "5274",
								"totalCost": "228274"
							},
							"external": {
								"add(uint256)": "infinite",
								"divide(uint256)": "infinite",
								"multiply(uint256)": "infinite",
								"subtract(uint256)": "infinite",
								"total()": "2446"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 121,
									"end": 1109,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 121,
									"end": 1109,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 121,
									"end": 1109,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 361,
									"end": 403,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 361,
									"end": 403,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 361,
									"end": 403,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 361,
									"end": 403,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 361,
									"end": 403,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 361,
									"end": 403,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 361,
									"end": 403,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 361,
									"end": 403,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 361,
									"end": 403,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 361,
									"end": 403,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 361,
									"end": 403,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 394,
									"end": 395,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 391,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 386,
									"end": 395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 386,
									"end": 395,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 386,
									"end": 395,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 386,
									"end": 395,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 121,
									"end": 1109,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 121,
									"end": 1109,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 121,
									"end": 1109,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 121,
									"end": 1109,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 1109,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 121,
									"end": 1109,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 1109,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e3283527bbf5243667d6e37b3c411496f57948443b97379c77d1107c9a99594d64736f6c634300081a0033",
									".code": [
										{
											"begin": 121,
											"end": 1109,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "PUSH",
											"source": 1,
											"value": "1003E2D2"
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "PUSH",
											"source": 1,
											"value": "1DC05F17"
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "PUSH",
											"source": 1,
											"value": "2DDBD13A"
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "PUSH",
											"source": 1,
											"value": "3E823F79"
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "PUSH",
											"source": 1,
											"value": "C6888FA1"
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 1109,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 456,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 456,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 456,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 456,
											"end": 580,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 456,
											"end": 580,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 456,
											"end": 580,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 456,
											"end": 580,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 456,
											"end": 580,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 456,
											"end": 580,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 456,
											"end": 580,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 456,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 456,
											"end": 580,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 456,
											"end": 580,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 456,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 456,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 456,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 456,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 456,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 456,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 456,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 456,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 456,
											"end": 580,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 770,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 640,
											"end": 770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 640,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 640,
											"end": 770,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 640,
											"end": 770,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 770,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 640,
											"end": 770,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 640,
											"end": 770,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 640,
											"end": 770,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 640,
											"end": 770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 640,
											"end": 770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 640,
											"end": 770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 640,
											"end": 770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 770,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 640,
											"end": 770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 640,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 640,
											"end": 770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 770,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 640,
											"end": 770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 640,
											"end": 770,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 282,
											"end": 302,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 282,
											"end": 302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 282,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 282,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 282,
											"end": 302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 282,
											"end": 302,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 282,
											"end": 302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 282,
											"end": 302,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 282,
											"end": 302,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 282,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 282,
											"end": 302,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 282,
											"end": 302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 282,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 282,
											"end": 302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 282,
											"end": 302,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 282,
											"end": 302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 282,
											"end": 302,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 282,
											"end": 302,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 282,
											"end": 302,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 282,
											"end": 302,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 282,
											"end": 302,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 282,
											"end": 302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 282,
											"end": 302,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 969,
											"end": 1106,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 969,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 969,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 969,
											"end": 1106,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 969,
											"end": 1106,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 969,
											"end": 1106,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 969,
											"end": 1106,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 969,
											"end": 1106,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 969,
											"end": 1106,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 969,
											"end": 1106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 969,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 969,
											"end": 1106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 969,
											"end": 1106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 969,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 969,
											"end": 1106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 969,
											"end": 1106,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 969,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 969,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 969,
											"end": 1106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 969,
											"end": 1106,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 969,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 969,
											"end": 1106,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 828,
											"end": 913,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 828,
											"end": 913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 828,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 828,
											"end": 913,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 828,
											"end": 913,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 828,
											"end": 913,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 828,
											"end": 913,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 828,
											"end": 913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 828,
											"end": 913,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 828,
											"end": 913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 828,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 828,
											"end": 913,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 828,
											"end": 913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 828,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 828,
											"end": 913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 828,
											"end": 913,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 828,
											"end": 913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 828,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 828,
											"end": 913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 828,
											"end": 913,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 828,
											"end": 913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 828,
											"end": 913,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 456,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 456,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 556,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 566,
											"end": 571,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 556,
											"end": 561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 561,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 556,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 556,
											"end": 565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 556,
											"end": 572,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 556,
											"end": 572,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 556,
											"end": 572,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 556,
											"end": 572,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 556,
											"end": 572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 556,
											"end": 572,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 556,
											"end": 572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 548,
											"end": 553,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 572,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 548,
											"end": 572,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 548,
											"end": 572,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 548,
											"end": 572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 456,
											"end": 580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 456,
											"end": 580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 770,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 640,
											"end": 770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 746,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 756,
											"end": 761,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 746,
											"end": 751,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 746,
											"end": 751,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 746,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 746,
											"end": 755,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 746,
											"end": 762,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 746,
											"end": 762,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 746,
											"end": 762,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 746,
											"end": 762,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 746,
											"end": 762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 746,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 746,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 738,
											"end": 743,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 738,
											"end": 762,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 738,
											"end": 762,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 738,
											"end": 762,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 738,
											"end": 762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 770,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 282,
											"end": 302,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 282,
											"end": 302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 282,
											"end": 302,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 282,
											"end": 302,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 282,
											"end": 302,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 282,
											"end": 302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 969,
											"end": 1106,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 969,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1028,
											"end": 1033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1037,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1020,
											"end": 1063,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1063,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1063,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1063,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1020,
											"end": 1063,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1063,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1063,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1020,
											"end": 1063,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1020,
											"end": 1063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1020,
											"end": 1063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1063,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1020,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1063,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1063,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1063,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1063,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1063,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1063,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1063,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1020,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1092,
											"end": 1097,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1082,
											"end": 1087,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1082,
											"end": 1091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1098,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1098,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1082,
											"end": 1098,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1098,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1082,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1098,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1098,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 969,
											"end": 1106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 969,
											"end": 1106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 828,
											"end": 913,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 828,
											"end": 913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 889,
											"end": 905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 899,
											"end": 904,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 889,
											"end": 894,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 889,
											"end": 894,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 889,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 889,
											"end": 898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 889,
											"end": 905,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 889,
											"end": 905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 889,
											"end": 905,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 889,
											"end": 905,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 889,
											"end": 905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 889,
											"end": 905,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 889,
											"end": 905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 881,
											"end": 886,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 881,
											"end": 905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 881,
											"end": 905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 881,
											"end": 905,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 881,
											"end": 905,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 828,
											"end": 913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 828,
											"end": 913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1546,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1377,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1472,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1501,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1493,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1502,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1539,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1530,
											"end": 1533,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1526,
											"end": 1540,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1546,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1546,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1546,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1546,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1723,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1552,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1692,
											"end": 1715,
											"name": "PUSH",
											"source": 2,
											"value": "43616E6E6F7420646976696465206279207A65726F0000000000000000000000"
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1690,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1669,
											"end": 1716,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 2095,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1729,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1871,
											"end": 1874,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1956,
											"end": 1958,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1951,
											"end": 1954,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1892,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1892,
											"end": 1959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1892,
											"end": 1959,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1892,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1885,
											"end": 1959,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1885,
											"end": 1959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1968,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2057,
											"end": 2060,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1968,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1968,
											"end": 2061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1968,
											"end": 2061,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1968,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2088,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2081,
											"end": 2084,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2077,
											"end": 2089,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2070,
											"end": 2089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2070,
											"end": 2089,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 2095,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 2095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 2095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 2095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2520,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2101,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2271,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2305,
											"end": 2307,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2294,
											"end": 2303,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2308,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2308,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2354,
											"end": 2363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2344,
											"end": 2364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2338,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2342,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2318,
											"end": 2365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2382,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2508,
											"end": 2512,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2382,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2382,
											"end": 2513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2382,
											"end": 2513,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2382,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2513,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2513,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2520,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2520,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2706,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2526,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2574,
											"end": 2651,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2571,
											"end": 2572,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2564,
											"end": 2652,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2675,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2668,
											"end": 2669,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2661,
											"end": 2676,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2695,
											"end": 2699,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2692,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2685,
											"end": 2700,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2712,
											"end": 2903,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2712,
											"end": 2903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2752,
											"end": 2755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2771,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2789,
											"end": 2790,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2771,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2771,
											"end": 2791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2771,
											"end": 2791,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2771,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2766,
											"end": 2791,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2766,
											"end": 2791,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2805,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2823,
											"end": 2824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2805,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2805,
											"end": 2825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2805,
											"end": 2825,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2805,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2825,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2825,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2848,
											"end": 2849,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2846,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2841,
											"end": 2850,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2869,
											"end": 2872,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2866,
											"end": 2867,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2863,
											"end": 2873,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2896,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2860,
											"end": 2896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2876,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2876,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2876,
											"end": 2894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2876,
											"end": 2894,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2876,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2896,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2860,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2712,
											"end": 2903,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2712,
											"end": 2903,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2712,
											"end": 2903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2712,
											"end": 2903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2712,
											"end": 2903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 3103,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2909,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2949,
											"end": 2953,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2987,
											"end": 2988,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2969,
											"end": 2989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 2989,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2969,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2964,
											"end": 2989,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2964,
											"end": 2989,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3003,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3021,
											"end": 3022,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3003,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3003,
											"end": 3023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3003,
											"end": 3023,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3003,
											"end": 3023,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3023,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3023,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3047,
											"end": 3048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3044,
											"end": 3045,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3040,
											"end": 3049,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3032,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3032,
											"end": 3049,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3072,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3065,
											"end": 3069,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3062,
											"end": 3073,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3076,
											"end": 3094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 3103,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 3103,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 3103,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 3103,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3109,
											"end": 3289,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3109,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3157,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3154,
											"end": 3155,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3235,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3254,
											"end": 3258,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3251,
											"end": 3252,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3244,
											"end": 3259,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3278,
											"end": 3282,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3275,
											"end": 3276,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3283,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3295,
											"end": 3480,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3295,
											"end": 3480,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3335,
											"end": 3336,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3370,
											"end": 3371,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3352,
											"end": 3372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3372,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3352,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3386,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3404,
											"end": 3405,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3386,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3386,
											"end": 3406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3386,
											"end": 3406,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3386,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3406,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3406,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3415,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3415,
											"end": 3450,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3430,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3430,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3430,
											"end": 3448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3430,
											"end": 3448,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3430,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3415,
											"end": 3450,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3415,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3472,
											"end": 3473,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3469,
											"end": 3470,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3295,
											"end": 3480,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3295,
											"end": 3480,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3295,
											"end": 3480,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3295,
											"end": 3480,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3295,
											"end": 3480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3486,
											"end": 3896,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3486,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3526,
											"end": 3533,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3567,
											"end": 3568,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3549,
											"end": 3569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3569,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3549,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3544,
											"end": 3569,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3544,
											"end": 3569,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3601,
											"end": 3602,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3583,
											"end": 3603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3603,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3583,
											"end": 3603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3578,
											"end": 3603,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3578,
											"end": 3603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3639,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3636,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3640,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3660,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3678,
											"end": 3689,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3660,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3660,
											"end": 3690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3660,
											"end": 3690,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3660,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3649,
											"end": 3690,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3649,
											"end": 3690,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3839,
											"end": 3840,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3830,
											"end": 3837,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3841,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3824,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3842,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3800,
											"end": 3801,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3793,
											"end": 3802,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3773,
											"end": 3856,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3750,
											"end": 3889,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3869,
											"end": 3887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3889,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3750,
											"end": 3889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 3896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3486,
											"end": 3896,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3486,
											"end": 3896,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3486,
											"end": 3896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3486,
											"end": 3896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3486,
											"end": 3896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Day-34/code5.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"add(uint256)": "1003e2d2",
							"divide(uint256)": "3e823f79",
							"multiply(uint256)": "c6888fa1",
							"subtract(uint256)": "1dc05f17",
							"total()": "2ddbd13a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"divide\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"multiply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"subtract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"total\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Day-34/code5.sol\":\"SafeMathExample\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"Day-34/code5.sol\":{\"keccak256\":\"0xd901dd90852936598135d7aa9bb31034273b176dc9082e9ffedf38091cd0167d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://072e758a687e6e960ed2ec7e428e4627a6dc915718c445ed7c2f0a4e85ffa4c8\",\"dweb:/ipfs/QmRY5HVUxwmFN2VnKiDHq5kPhFxdXUCTy663Y3HWkWYEYM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 319,
								"contract": "Day-34/code5.sol:SafeMathExample",
								"label": "total",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "490:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "717:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "727:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "751:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "763:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "767:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "786:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "790:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "782:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "793:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "838:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "824:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "657:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "668:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "702:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "708:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:0"
									},
									"scope": 311,
									"src": "641:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1078:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1116:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1120:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1112:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1123:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1168:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1172:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1154:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1018:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1029:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1063:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1069:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:0"
									},
									"scope": 311,
									"src": "1002:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1415:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1683:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1679:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1691:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1721:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1733:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1737:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1756:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1760:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1765:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1752:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1768:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1813:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1799:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1355:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1366:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1400:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1406:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:0"
									},
									"scope": 311,
									"src": "1339:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2057:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2095:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2091:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2103:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2148:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2152:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2134:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1997:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2008:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2042:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2048:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:0"
									},
									"scope": 311,
									"src": "1981:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2406:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2444:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2440:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2452:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2497:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2501:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2483:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2346:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2357:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2391:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2397:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:0"
									},
									"scope": 311,
									"src": "2330:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2822:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2839:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2843:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2832:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2768:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2779:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2813:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:0"
									},
									"scope": 311,
									"src": "2755:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3189:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3206:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3210:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3199:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3135:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3146:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3180:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:0"
									},
									"scope": 311,
									"src": "3122:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3532:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3549:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3553:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3542:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3478:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3489:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3523:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:0"
									},
									"scope": 311,
									"src": "3465:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3917:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3934:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3938:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3927:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3863:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3874:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3908:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:0"
									},
									"scope": 311,
									"src": "3850:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4466:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4483:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4487:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4476:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4412:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4423:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4457:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:0"
									},
									"scope": 311,
									"src": "4399:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5054:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5096:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5101:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5104:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5138:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5142:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5131:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4972:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4983:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4994:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5045:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:0"
									},
									"scope": 311,
									"src": "4959:201:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5739:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5781:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5788:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5822:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5826:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5815:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5657:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5668:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5679:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5730:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:0"
									},
									"scope": 311,
									"src": "5644:200:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6585:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6627:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6634:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6668:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6672:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6661:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6503:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6514:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6525:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6576:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:0"
									},
									"scope": 311,
									"src": "6490:200:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "482:6210:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:0"
				},
				"id": 0
			},
			"Day-34/code5.sol": {
				"ast": {
					"absolutePath": "Day-34/code5.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						],
						"SafeMathExample": [
							387
						]
					},
					"id": 388,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 388,
							"sourceUnit": 312,
							"src": "60:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMathExample",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 387,
							"linearizedBaseContracts": [
								387
							],
							"name": "SafeMathExample",
							"nameLocation": "130:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 317,
									"libraryName": {
										"id": 315,
										"name": "SafeMath",
										"nameLocations": [
											"203:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "203:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "197:27:1",
									"typeName": {
										"id": 316,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "216:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "2ddbd13a",
									"id": 319,
									"mutability": "mutable",
									"name": "total",
									"nameLocation": "297:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 387,
									"src": "282:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 318,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "282:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "375:28:1",
										"statements": [
											{
												"expression": {
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 322,
														"name": "total",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "386:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 323,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "394:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "386:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "386:9:1"
											}
										]
									},
									"id": 327,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "372:2:1"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "375:0:1"
									},
									"scope": 387,
									"src": "361:42:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "493:87:1",
										"statements": [
											{
												"expression": {
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 332,
														"name": "total",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "548:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 335,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 329,
																"src": "566:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 333,
																"name": "total",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "556:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "562:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "556:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "556:16:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "548:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "548:24:1"
											}
										]
									},
									"functionSelector": "1003e2d2",
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "465:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "469:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "468:15:1"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "493:0:1"
									},
									"scope": 387,
									"src": "456:124:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "682:88:1",
										"statements": [
											{
												"expression": {
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 345,
														"name": "total",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "738:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 348,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 342,
																"src": "756:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 346,
																"name": "total",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "746:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "752:3:1",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "746:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "746:16:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "738:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 351,
												"nodeType": "ExpressionStatement",
												"src": "738:24:1"
											}
										]
									},
									"functionSelector": "1dc05f17",
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "subtract",
									"nameLocation": "649:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "666:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "658:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "657:15:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "682:0:1"
									},
									"scope": 387,
									"src": "640:130:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "870:43:1",
										"statements": [
											{
												"expression": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 358,
														"name": "total",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "881:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 361,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "899:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 359,
																"name": "total",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "889:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "895:3:1",
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 205,
															"src": "889:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "889:16:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "881:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "881:24:1"
											}
										]
									},
									"functionSelector": "c6888fa1",
									"id": 366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "multiply",
									"nameLocation": "837:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "854:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "846:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:15:1"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "870:0:1"
									},
									"scope": 387,
									"src": "828:85:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "1009:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 372,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "1028:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1036:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1028:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420646976696465206279207a65726f",
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1039:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_622c26413b06464e69496be671ab0fcebbc899479bb0dd81b3f6dda96feeb74b",
																"typeString": "literal_string \"Cannot divide by zero\""
															},
															"value": "Cannot divide by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_622c26413b06464e69496be671ab0fcebbc899479bb0dd81b3f6dda96feeb74b",
																"typeString": "literal_string \"Cannot divide by zero\""
															}
														],
														"id": 371,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1020:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1020:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "1020:43:1"
											},
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 378,
														"name": "total",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1074:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 381,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "1092:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 379,
																"name": "total",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "1082:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1088:3:1",
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 220,
															"src": "1082:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1082:16:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1074:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "1074:24:1"
											}
										]
									},
									"functionSelector": "3e823f79",
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "divide",
									"nameLocation": "978:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "993:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "985:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "985:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "984:15:1"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1009:0:1"
									},
									"scope": 387,
									"src": "969:137:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 388,
							"src": "121:988:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1076:1"
				},
				"id": 1
			}
		}
	}
}